apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'
group = 'ru.mgprojects'
description = 'Utils for work with files.'

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.4"
    }
}

sourceSets {
    run {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs = files('src/main/java')
        }
        resources {
            srcDirs = files('src/main/resources')
        }
    }
}

configurations {
    runCompile.extendsFrom testCompile
    runRuntime.extendsFrom testRuntime
}

dependencies {
    compile group: 'commons-io', name: 'commons-io', version: '2.+'
    compile "org.slf4j:slf4j-api:${slf4jVer}"
    compile "org.slf4j:slf4j-simple:${slf4jVer}"
    compile "io.qameta.allure:allure-junit4:${allureJUnitVersion}"
    compile 'io.qameta.allure:allure-gradle:2.4'
    compile "io.qameta.allure:allure-junit4:${allureJUnitVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "com.codeborne:selenide:${selenideVer}"
    compile "org.apache.commons:commons-lang3:${lang3Ver}"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

run () {
    mainClassName = "FileHelper"
    outputs.upToDateWhen { false }

}

//region Allure reporting
// plugin creates tasks in afterEvaluate handler, so configuring these tasks must be in same handler too
apply plugin: 'io.qameta.allure'

allure {
    version = project.properties.allureVersion
    aspectjweaver = true
    // set explicitly because have to add runtime dependency of same version
    aspectjVersion = project.properties.aspectjweaverVersion
    // need compile to because Allure annotations are used in 'main' source set
    configuration = 'compile'
    useJUnit4 {
        version = project.properties.allureJUnitVersion
    }
}

afterEvaluate {
    allureReport {
        group = 'Reporting'
        description = 'Aggregated testing report'
    }
    tasks.run.finalizedBy(allureReport)
}
//endregion
